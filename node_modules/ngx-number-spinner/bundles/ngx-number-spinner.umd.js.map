{"version":3,"file":"ngx-number-spinner.umd.js","sources":["ng://ngx-number-spinner/lib/ngx-number-spinner/ngx-number-spinner.component.ts","ng://ngx-number-spinner/lib/ngx-number-spinner.module.ts"],"sourcesContent":["import { Component, Input, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector:    'ngx-number-spinner',\n  templateUrl: './ngx-number-spinner.component.html',\n  styleUrls: [\n    './ngx-number-spinner.component.scss'\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxNumberSpinnerComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgxNumberSpinnerComponent implements ControlValueAccessor {\n  @Input('value') value: number = 0;\n  @Input('step') step: number = 1;\n  @Input('min') min: number;\n  @Input('max') max: number;\n  @Input('direction') direction: 'horizontal'|'vertical' = 'horizontal';\n\n  @Output('change') change: EventEmitter<number> = new EventEmitter();\n\n  disabled: boolean;\n\n  _propagateChange:any = () => {};\n  _onTouched: () => void;\n\n  constructor() { }\n\n  writeValue(value:number):void {\n    this.value = value || 0;\n  }\n\n  registerOnChange(fn:any):void {\n    this._propagateChange = fn;\n  }\n\n  registerOnTouched(fn:any):void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled:boolean):void {\n    this.disabled = isDisabled;\n  }\n\n  inc():void {\n    this.value += this.step;\n    this._onChange();\n  }\n\n  dec():void {\n    this.value -= this.step;\n\n    this._onChange();\n  }\n\n  private _onChange():void {\n    this._propagateChange(this.value);\n\n    this.change.emit(this.value);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { NgxNumberSpinnerComponent } from './ngx-number-spinner/ngx-number-spinner.component';\n\n@NgModule({\n  declarations: [\n    NgxNumberSpinnerComponent\n  ],\n  exports: [\n    NgxNumberSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgxNumberSpinnerModule { }\n"],"names":["EventEmitter","Component","NG_VALUE_ACCESSOR","forwardRef","Input","Output","NgModule","CommonModule"],"mappings":";;;;;;;;;;;AAAA;QA+BE;YAbgB,UAAK,GAAW,CAAC,CAAC;YACnB,SAAI,GAAW,CAAC,CAAC;YAGZ,cAAS,GAA4B,YAAY,CAAC;YAEpD,WAAM,GAAyB,IAAIA,iBAAY,EAAE,CAAC;YAIpE,qBAAgB;;;YAAO,eAAQ,EAAC;SAGf;;;;;QAEjB,8CAAU;;;;QAAV,UAAW,KAAY;YACrB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;SACzB;;;;;QAED,oDAAgB;;;;QAAhB,UAAiB,EAAM;YACrB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;SAC5B;;;;;QAED,qDAAiB;;;;QAAjB,UAAkB,EAAM;YACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;SACtB;;;;;QAED,oDAAgB;;;;QAAhB,UAAkB,UAAkB;YAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;SAC5B;;;;QAED,uCAAG;;;QAAH;YACE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;YACxB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;;;;QAED,uCAAG;;;QAAH;YACE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;YAExB,IAAI,CAAC,SAAS,EAAE,CAAC;SAClB;;;;;QAEO,6CAAS;;;;QAAjB;YACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAElC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SAC9B;;oBA7DFC,cAAS,SAAC;wBACT,QAAQ,EAAK,oBAAoB;wBACjC,07BAAkD;wBAIlD,SAAS,EAAE;4BACT;gCACE,OAAO,EAAEC,uBAAiB;gCAC1B,WAAW,EAAEC,eAAU;;;gCAAC,cAAM,OAAA,yBAAyB,GAAA,EAAC;gCACxD,KAAK,EAAE,IAAI;6BACZ;yBACF;;qBACF;;;;;4BAEEC,UAAK,SAAC,OAAO;2BACbA,UAAK,SAAC,MAAM;0BACZA,UAAK,SAAC,KAAK;0BACXA,UAAK,SAAC,KAAK;gCACXA,UAAK,SAAC,WAAW;6BAEjBC,WAAM,SAAC,QAAQ;;QAyClB,gCAAC;KA9DD,IA8DC;;;QA/CC,0CAAkC;;QAClC,yCAAgC;;QAChC,wCAA0B;;QAC1B,wCAA0B;;QAC1B,8CAAsE;;QAEtE,2CAAoE;;QAEpE,6CAAkB;;QAElB,qDAAgC;;QAChC,+CAAuB;;;;;;;;AC7BzB;QAMA;SAWuC;;oBAXtCC,aAAQ,SAAC;wBACR,YAAY,EAAE;4BACZ,yBAAyB;yBAC1B;wBACD,OAAO,EAAE;4BACP,yBAAyB;yBAC1B;wBACD,OAAO,EAAE;4BACPC,mBAAY;yBACb;qBACF;;QACqC,6BAAC;KAXvC;;;;;;;;;;;;;"}