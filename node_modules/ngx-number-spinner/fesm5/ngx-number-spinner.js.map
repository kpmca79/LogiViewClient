{"version":3,"file":"ngx-number-spinner.js","sources":["ng://ngx-number-spinner/lib/ngx-number-spinner/ngx-number-spinner.component.ts","ng://ngx-number-spinner/lib/ngx-number-spinner.module.ts"],"sourcesContent":["import { Component, Input, EventEmitter, Output, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  selector:    'ngx-number-spinner',\n  templateUrl: './ngx-number-spinner.component.html',\n  styleUrls: [\n    './ngx-number-spinner.component.scss'\n  ],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => NgxNumberSpinnerComponent),\n      multi: true\n    }\n  ]\n})\nexport class NgxNumberSpinnerComponent implements ControlValueAccessor {\n  @Input('value') value: number = 0;\n  @Input('step') step: number = 1;\n  @Input('min') min: number;\n  @Input('max') max: number;\n  @Input('direction') direction: 'horizontal'|'vertical' = 'horizontal';\n\n  @Output('change') change: EventEmitter<number> = new EventEmitter();\n\n  disabled: boolean;\n\n  _propagateChange:any = () => {};\n  _onTouched: () => void;\n\n  constructor() { }\n\n  writeValue(value:number):void {\n    this.value = value || 0;\n  }\n\n  registerOnChange(fn:any):void {\n    this._propagateChange = fn;\n  }\n\n  registerOnTouched(fn:any):void {\n    this._onTouched = fn;\n  }\n\n  setDisabledState?(isDisabled:boolean):void {\n    this.disabled = isDisabled;\n  }\n\n  inc():void {\n    this.value += this.step;\n    this._onChange();\n  }\n\n  dec():void {\n    this.value -= this.step;\n\n    this._onChange();\n  }\n\n  private _onChange():void {\n    this._propagateChange(this.value);\n\n    this.change.emit(this.value);\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport { NgxNumberSpinnerComponent } from './ngx-number-spinner/ngx-number-spinner.component';\n\n@NgModule({\n  declarations: [\n    NgxNumberSpinnerComponent\n  ],\n  exports: [\n    NgxNumberSpinnerComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class NgxNumberSpinnerModule { }\n"],"names":[],"mappings":";;;;;;;;;AAAA;IA+BE;QAbgB,UAAK,GAAW,CAAC,CAAC;QACnB,SAAI,GAAW,CAAC,CAAC;QAGZ,cAAS,GAA4B,YAAY,CAAC;QAEpD,WAAM,GAAyB,IAAI,YAAY,EAAE,CAAC;QAIpE,qBAAgB;;;QAAO,eAAQ,EAAC;KAGf;;;;;IAEjB,8CAAU;;;;IAAV,UAAW,KAAY;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,IAAI,CAAC,CAAC;KACzB;;;;;IAED,oDAAgB;;;;IAAhB,UAAiB,EAAM;QACrB,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;KAC5B;;;;;IAED,qDAAiB;;;;IAAjB,UAAkB,EAAM;QACtB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;KACtB;;;;;IAED,oDAAgB;;;;IAAhB,UAAkB,UAAkB;QAClC,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC;KAC5B;;;;IAED,uCAAG;;;IAAH;QACE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;QACxB,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;;;;IAED,uCAAG;;;IAAH;QACE,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,CAAC;QAExB,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;;;;;IAEO,6CAAS;;;;IAAjB;QACE,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAElC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;;gBA7DF,SAAS,SAAC;oBACT,QAAQ,EAAK,oBAAoB;oBACjC,07BAAkD;oBAIlD,SAAS,EAAE;wBACT;4BACE,OAAO,EAAE,iBAAiB;4BAC1B,WAAW,EAAE,UAAU;;;4BAAC,cAAM,OAAA,yBAAyB,GAAA,EAAC;4BACxD,KAAK,EAAE,IAAI;yBACZ;qBACF;;iBACF;;;;;wBAEE,KAAK,SAAC,OAAO;uBACb,KAAK,SAAC,MAAM;sBACZ,KAAK,SAAC,KAAK;sBACX,KAAK,SAAC,KAAK;4BACX,KAAK,SAAC,WAAW;yBAEjB,MAAM,SAAC,QAAQ;;IAyClB,gCAAC;CA9DD,IA8DC;;;IA/CC,0CAAkC;;IAClC,yCAAgC;;IAChC,wCAA0B;;IAC1B,wCAA0B;;IAC1B,8CAAsE;;IAEtE,2CAAoE;;IAEpE,6CAAkB;;IAElB,qDAAgC;;IAChC,+CAAuB;;;;;;;;AC7BzB;IAMA;KAWuC;;gBAXtC,QAAQ,SAAC;oBACR,YAAY,EAAE;wBACZ,yBAAyB;qBAC1B;oBACD,OAAO,EAAE;wBACP,yBAAyB;qBAC1B;oBACD,OAAO,EAAE;wBACP,YAAY;qBACb;iBACF;;IACqC,6BAAC;CAXvC;;;;;;;;;;;;;;;;"}